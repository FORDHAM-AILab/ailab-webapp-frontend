[{"/Users/xuanmingcui/Documents/projects/analytics-webapp/src/index.js":"1","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/layouts/Admin.js":"2","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/routes.js":"3","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/components/Navbars/DemoNavbar.js":"4","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/components/Sidebar/Sidebar.js":"5","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/components/Footer/Footer.js":"6","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/views/Settings.js":"7","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/views/User.js":"8","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/variables/charts.js":"9","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/components/Switch/ToggleSwitch.js":"10","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/components/Forms/FetchStockData.js":"11","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/utils/data.js":"12","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/views/Portfolio.js":"13","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/views/Options.js":"14","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/views/Stock.js":"15","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/views/Sentiment.js":"16","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/views/Home.js":"17","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/components/Tables/table.js":"18"},{"size":1209,"mtime":1642538463994,"results":"19","hashOfConfig":"20"},{"size":2669,"mtime":1642925586824,"results":"21","hashOfConfig":"20"},{"size":2002,"mtime":1642925777610,"results":"22","hashOfConfig":"20"},{"size":5705,"mtime":1642020505935,"results":"23","hashOfConfig":"20"},{"size":2675,"mtime":1642538016262,"results":"24","hashOfConfig":"20"},{"size":1487,"mtime":1638942337010,"results":"25","hashOfConfig":"20"},{"size":5319,"mtime":1642018567255,"results":"26","hashOfConfig":"20"},{"size":11687,"mtime":1621243777000,"results":"27","hashOfConfig":"20"},{"size":1756,"mtime":1638941609357,"results":"28","hashOfConfig":"20"},{"size":1861,"mtime":1642140150105,"results":"29","hashOfConfig":"20"},{"size":1913,"mtime":1642705166091,"results":"30","hashOfConfig":"20"},{"size":750,"mtime":1642704826292,"results":"31","hashOfConfig":"20"},{"size":11036,"mtime":1642924387382,"results":"32","hashOfConfig":"20"},{"size":1449,"mtime":1642925738052,"results":"33","hashOfConfig":"20"},{"size":4021,"mtime":1642924369666,"results":"34","hashOfConfig":"20"},{"size":5442,"mtime":1642924396546,"results":"35","hashOfConfig":"20"},{"size":3220,"mtime":1642925228125,"results":"36","hashOfConfig":"20"},{"size":1350,"mtime":1642919787321,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1ox5gtz",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"40"},"/Users/xuanmingcui/Documents/projects/analytics-webapp/src/index.js",[],["85","86"],"/Users/xuanmingcui/Documents/projects/analytics-webapp/src/layouts/Admin.js",["87","88","89","90"],"/Users/xuanmingcui/Documents/projects/analytics-webapp/src/routes.js",["91"],"/Users/xuanmingcui/Documents/projects/analytics-webapp/src/components/Navbars/DemoNavbar.js",["92","93","94","95","96","97","98","99","100"],"/*!\n\n=========================================================\n* Paper Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/main/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Container,\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon,\n  Input,\n} from \"reactstrap\";\n\nimport routes from \"routes.js\";\n\nfunction Header(props) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\n  const [color, setColor] = React.useState(\"transparent\");\n  const sidebarToggle = React.useRef();\n  const location = useLocation();\n  const toggle = () => {\n    if (isOpen) {\n      setColor(\"transparent\");\n    } else {\n      setColor(\"dark\");\n    }\n    setIsOpen(!isOpen);\n  };\n  const dropdownToggle = (e) => {\n    setDropdownOpen(!dropdownOpen);\n  };\n  const getBrand = () => {\n    let brandName = \"Default Brand\";\n    routes.map((prop, key) => {\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n        brandName = prop.name;\n      }\n      return null;\n    });\n    return brandName;\n  };\n  const openSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    sidebarToggle.current.classList.toggle(\"toggled\");\n  };\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  const updateColor = () => {\n    if (window.innerWidth < 993 && isOpen) {\n      setColor(\"dark\");\n    } else {\n      setColor(\"transparent\");\n    }\n  };\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor.bind(this));\n  });\n  React.useEffect(() => {\n    if (\n      window.innerWidth < 993 &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }, [location]);\n  return (\n    // add or remove classes depending if we are on full-screen-maps page or not\n    <Navbar\n      color={\n        props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n          ? \"dark\"\n          : color\n      }\n      expand=\"lg\"\n      className={\n        props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n          ? \"navbar-absolute fixed-top\"\n          : \"navbar-absolute fixed-top \" +\n            (color === \"transparent\" ? \"navbar-transparent \" : \"\")\n      }\n    >\n      <Container fluid>\n        <div className=\"navbar-wrapper\">\n          <div className=\"navbar-toggle\">\n            <button\n              type=\"button\"\n              ref={sidebarToggle}\n              className=\"navbar-toggler\"\n              onClick={() => openSidebar()}\n            >\n              <span className=\"navbar-toggler-bar bar1\" />\n              <span className=\"navbar-toggler-bar bar2\" />\n              <span className=\"navbar-toggler-bar bar3\" />\n            </button>\n          </div>\n          <NavbarBrand href=\"/\">{getBrand()}</NavbarBrand>\n        </div>\n        <NavbarToggler onClick={toggle}>\n          <span className=\"navbar-toggler-bar navbar-kebab\" />\n          <span className=\"navbar-toggler-bar navbar-kebab\" />\n          <span className=\"navbar-toggler-bar navbar-kebab\" />\n        </NavbarToggler>\n        <Collapse isOpen={isOpen} navbar className=\"justify-content-end\">\n          {/* <form>\n            <InputGroup className=\"no-border\">\n              <Input placeholder=\"Search...\" />\n              <InputGroupAddon addonType=\"append\">\n                <InputGroupText>\n                  <i className=\"nc-icon nc-zoom-split\" />\n                </InputGroupText>\n              </InputGroupAddon>\n            </InputGroup>\n          </form> */}\n          <Nav navbar>\n            <NavItem>\n              {/* <Link to=\"#pablo\" className=\"nav-link btn-magnify\">\n                <i className=\"nc-icon nc-layout-11\" />\n                <p>\n                  <span className=\"d-lg-none d-md-block\">Stats</span>\n                </p>\n              </Link> */}\n            </NavItem>\n            {/* <Dropdown\n              nav\n              isOpen={dropdownOpen}\n              toggle={(e) => dropdownToggle(e)}\n            >\n              <DropdownToggle caret nav>\n                <i className=\"nc-icon nc-bell-55\" />\n                <p>\n                  <span className=\"d-lg-none d-md-block\">Some Actions</span>\n                </p>\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem tag=\"a\">Action</DropdownItem>\n                <DropdownItem tag=\"a\">Another Action</DropdownItem>\n                <DropdownItem tag=\"a\">Something else here</DropdownItem>\n              </DropdownMenu>\n            </Dropdown> */}\n            <NavItem>\n              <Link to=\"/admin/account\" className=\"nav-link btn-rotate\">\n                <i className=\"nc-icon nc-circle-10\" />\n                <p>\n                  <span className=\"d-lg-none d-md-block\">Account</span>\n                </p>\n              </Link>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/components/Sidebar/Sidebar.js",["101"],"/*!\n\n=========================================================\n* Paper Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/main/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav } from \"reactstrap\";\nimport { Link } from 'react-router-dom';\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport logo from \"logo.svg\";\n\nvar ps;\n\nfunction Sidebar(props) {\n  const sidebar = React.useRef();\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  };\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(sidebar.current, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n    }\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n    };\n  });\n  return (\n    <div\n      className=\"sidebar\"\n      data-color={props.bgColor}\n      data-active-color={props.activeColor}\n    >\n      <div className=\"logo\">\n        <a\n          className=\"simple-text logo-mini\"\n        >\n          <div className=\"logo-img\">\n            <img src={logo} alt=\"react-logo\" />\n          </div>\n        </a>\n        <Link to='/admin/home/'\n          className=\"simple-text logo-normal\"\n        >\n          WebApp\n        </Link>\n      </div>\n      <div className=\"sidebar-wrapper\" ref={sidebar}>\n        <Nav>\n          {props.routes.map((prop, key) => {\n            return (\n              <li\n                className={\n                  activeRoute(prop.path) + (prop.pro ? \" active-pro\" : \"\")\n                }\n                key={key}\n              >\n                <NavLink\n                  to={prop.layout + prop.path}\n                  className=\"nav-link\"\n                  activeClassName=\"active\"\n                >\n                  <i className={prop.icon} />\n                  <p>{prop.name}</p>\n                </NavLink>\n              </li>\n            );\n          })}\n        </Nav>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/components/Footer/Footer.js",[],"/Users/xuanmingcui/Documents/projects/analytics-webapp/src/views/Settings.js",[],"/Users/xuanmingcui/Documents/projects/analytics-webapp/src/views/User.js",[],"/Users/xuanmingcui/Documents/projects/analytics-webapp/src/variables/charts.js",["102"],"/*!\n\n=========================================================\n* Paper Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/main/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n\nimport { Line, Pie } from \"react-chartjs-2\";\n//import \"chartjs-plugin-colorschemes\";\n\nexport function StockPriceChart(stock_data) {\n  console.log(stock_data)\n  const data = {\n    labels: stock_data['stock_data']['labels'],\n    datasets: stock_data['stock_data']['datasets']\n  }\n   const options = {\n    legend: {\n      display: true},\n    tooltips: {\n      enabled: false\n    },\n    plugins: {\n      zoom: {\n        pan: {\n          enabled: true,\n          mode: \"xy\"\n        }\n      },\n      colorschemes: {scheme: \"tableau.ColorBlind10\"}\n    },\n    scales: {\n      y: {\n        ticks: {\n          color: \"#9f9f9f\",\n          beginAtZero: false,\n          maxTicksLimit: 5,\n        },\n        grid: {\n          drawBorder: true,\n          display: false,\n        },\n      },\n      x: {\n        barPercentage: 1.6,\n        grid: {\n          drawBorder: true,\n          display: false,\n        },\n        ticks: {\n          padding: 20,\n          color: \"#9f9f9f\",\n        },\n      },\n    }\n  }\n   return (\n     <>\n      <Line\n      data = {data}\n      options = {options}\n      width={400}\n      height={100}\n      />\n    </>\n    )\n}\n\n\n\n\n\n","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/components/Switch/ToggleSwitch.js",["103","104","105","106","107","108","109","110","111","112","113","114"],"import React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav } from \"reactstrap\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport classnames from 'classnames';\n\nimport {\n  Row, Col,\n  Button,\n  CardHeader,\n  CardTitle,\n  Card,\n  CardBody,\n  Progress,\n  TabContent,\n  TabPane,\n} from 'reactstrap';\nimport Form from 'react-bootstrap/Form';\nimport Stock_info_form from \"components/Forms/FetchStockData.js\"\n\n\nexport function SwitchTab({Component1, Component2, button_name1, button_name2}) {\n  const [active_state, setActive_state] = useState('0')\n\n  return (\n    <>\n          <div className=\"btn-actions-pane-right\">\n              <Button outline\n                      className={\"border-0 btn-pill btn-wide btn-transition \" + classnames({active: active_state === '0'})}\n                      color=\"primary\" onClick={() => {\n                  setActive_state('0');\n              }}>{button_name1}</Button>\n              <Button outline\n                      className={\"ml-1 btn-pill btn-wide border-0 btn-transition \" + classnames({active: active_state === '1'})}\n                      color=\"primary\" onClick={() => {\n                  setActive_state('1')\n              }}>{button_name2}</Button>\n          </div>\n        <TabContent activeTab={active_state}>\n          <TabPane tabId=\"0\">\n              <CardBody className=\"pt-2\">\n                <div class=\"flexbox-container\">\n                  {Component1}\n                </div>\n              </CardBody>\n          </TabPane>\n        </TabContent>\n        <TabContent activeTab={active_state}>\n          <TabPane tabId=\"1\">\n              <CardBody className=\"pt-2\">\n                {Component2}           \n              </CardBody>\n          </TabPane>\n        </TabContent>\n    </>\n  );\n}\n\n","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/components/Forms/FetchStockData.js",["115"],"import React, { useEffect, useState } from \"react\";\n\n  // core components\n  import Button from 'react-bootstrap/Button';\n  import Form from 'react-bootstrap/Form';\n\n  const default_stock_tickers = \"AAPL, TSLA\";\n\n  function Stock_info_form({fetch_data}) {\n    const [tickers, setTickers] = useState(default_stock_tickers);\n    const [start_date, setStartDate] = useState('2020-01-10');\n    const [end_date, setEndDate] = useState('2020-01-20');\n  \n    useEffect(() => {\n      fetch_data(tickers, start_date, end_date)\n    }, [])\n  \n    const handleSubmit = (evt) => {\n      evt.preventDefault();\n      fetch_data(tickers, start_date, end_date);\n    };\n    return (\n      <>\n      <div class=\"flexbox-container\">\n        <Form onSubmit = {handleSubmit} className = 'settings'>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Tickers</Form.Label>\n              <Form.Control \n                name=\"tickers\" type=\"text\" placeholder={default_stock_tickers}              \n                value={tickers}\n                onChange={e => setTickers(e.target.value)}/>\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Start Date</Form.Label>\n              <Form.Control \n                name=\"start_date\"type=\"text\" placeholder=\"YYYY-MM-DD\"               \n                value={start_date}\n                onChange={e => setStartDate(e.target.value)}/>\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>End Date</Form.Label>\n              <Form.Control \n                name=\"end_date\"type=\"text\" placeholder=\"YYYY-MM-DD\"               \n                value={end_date}\n                onChange={e => setEndDate(e.target.value)}/>\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n      </>\n    )\n  };\n\n  export default Stock_info_form;","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/utils/data.js",["116"],"import React, { Component } from 'react';\nimport { CSVReader } from 'react-papaparse';\n\nfunction Csv_reader ({handleOnComplete, handleOnRemove}){\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log(err);\n  };\n\n\n\n\n    return (\n        <>\n        <div>\n            <CSVReader\n                onError={handleOnError}\n                addRemoveButton\n                onRemoveFile={handleOnRemove}\n                config={{\n                    \"skipEmptyLines\":true,\n                    \"complete\": (results, file) => {handleOnComplete(results)}\n                }}\n            >\n                <span>Drop file here or click to upload.</span>\n            </CSVReader>\n        </div>\n        </>\n    );\n}\n\nexport default Csv_reader;","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/views/Portfolio.js",["117","118","119","120","121","122","123","124","125","126","127"],"import React, { useEffect, useState } from \"react\";\nimport Stock_info_form from \"components/Forms/FetchStockData.js\";\nimport {StockPriceChart} from \"variables/charts.js\" ;\nimport { SwitchTab } from \"components/Switch/ToggleSwitch\";\nimport Csv_reader from \"utils/data.js\"\nimport DynamicTable from \"components/Tables/table.js\"\nimport {ButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle, Form, FormGroup, Label, Input, Button, CardSubtitle} from \"reactstrap\";\n\n// reactstrap components\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\n\nfunction PortfolioAnalysis() {\n\n  const [stock_data, setLineData] = useState({});\n  const [data, setAnalyticsData] = useState({});\n  const [weights, setWeights] = useState('');\n  const [port_value, setPortValue] = useState(1)\n  const [basic_info, setBasicInfo] = useState({});\n  const [var_level, setVarLevel] = useState(5)\n  const [var_method, setVarMethod] = useState('Historical VaR');\n  const [var_iterations, setVarIteration] = useState();\n  const [valueatrisk, setValueatrisk] = useState();\n  const [var_alpha, setVarAlpha] = useState();\n  //const [file, upLoadFile] = useState();\n\n  // function handleFileUpload(event) {\n  //   upLoadFile(event.target.files[0])\n  // }\n\n  function chart_data_parser(data){\n    const dataset = [];\n    let labels;\n    if (\"date\" in data){\n      labels = data[\"date\"];\n      delete data[\"date\"];\n    }\n    else if (\"Date\" in data){\n      labels = data[\"Date\"];\n      delete data[\"Date\"];\n    }\n    else{\n      labels = [...Array(Object.keys(data).length).keys()];\n    }\n    for (let i = 0; i < Object.keys(data).length; i ++){\n      let data_dict = {\n        label:Object.keys(data)[i],\n        pointRadius: 0,\n        pointHoverRadius: 0,\n        borderWidth: 3,\n        tension: 0.4,\n        fill: false,\n        data: data[Object.keys(data)[i]]};\n      dataset.push(data_dict)\n    };\n\n    const line_chart_data = {labels: labels, datasets: dataset};\n    return line_chart_data;\n  }\n\n\n\n  function handleOnComplete (data) {\n    let parsed_data = {};\n    for (let i = 0; i < data[\"data\"].length; i++){\n      if (i ==0){\n        for (let j = 0; j < data[\"data\"][0].length; j++){\n          parsed_data[data[\"data\"][0][j]]=[];\n        }\n      }\n      else{\n        for (let j = 0; j < data[\"data\"][i].length; j++){\n          parsed_data[data[\"data\"][0][j]].push(data[\"data\"][i][j]);\n        }\n      }\n    }\n    setBasicInfo({});\n    setLineData(chart_data_parser(parsed_data));\n    setAnalyticsData(parsed_data);    \n  }\n\n\n  function handleOnRemove () {\n    setLineData({});\n    setAnalyticsData({});\n    setBasicInfo({});\n    setValueatrisk()\n  }\n\n\n  function EnterSpecs (){\n    function onChange (e) {\n      setWeights(e.target.value);\n    }\n\n    function onChangePortValue (e) {\n      setPortValue(e.target.value);\n    }\n\n    function onSubmit (e) {\n      e.preventDefault();\n      console.log(port_value);\n      const weights_array = weights.split(\",\").map(Number);\n      get_basic_info(data, weights_array, port_value);\n    }\n    return (\n      <Card>\n        <CardHeader>Enter Specifications</CardHeader>\n        <CardBody>\n          <Form onSubmit={onSubmit}>\n            <FormGroup>\n              <Label>Portfolio value (Default 1)</Label>\n              <Input onChange={onChangePortValue}>1</Input>\n              <Label>Weights (Leave blank for even weights)</Label>\n              <Input placeholder=\"e.g. 0.2, 0.2, 0.6\" onChange={onChange}/>\n            </FormGroup>\n            <Button>Submit</Button>\n          </Form>\n        </CardBody>\n      </Card>\n\n    )\n  }\n\n\n\n  function BasicInfoCard() {\n    console.log(basic_info);\n    if ((basic_info != null) && (Object.keys(basic_info).length > 0)){\n      return (\n        <>\n          <Card className=\"analysis\">\n            <CardHeader>\n              <CardTitle tag=\"h5\">Basic statistics</CardTitle>\n              <p className=\"card-category\">\n                Tickers: {tickers}\n              </p>\n            </CardHeader>\n            <CardBody className=\"basic_info\">\n              <CardSubtitle>Return Statistics</CardSubtitle>\n              <DynamicTable data={basic_info} />\n\n            </CardBody>\n          </Card>\n        </>\n      )\n    }\n    else {\n      return (<></>)\n    }\n  }\n\n\n  function VaRForm() {\n\n    function onClick(e){\n      setVarMethod(e.target.value)\n    }\n\n    function onChangeLevel(e){\n      setVarLevel(e.target.value);\n    }\n\n    function IterationsInput (){\n      function onChange (e) {\n        setVarIteration(e.target.value);\n      }\n\n      if (var_method === \"Monte Carlo VaR\"){\n        return (\n          <FormGroup>\n            <Label>Number of iterations for Monte Carlo Simulation</Label>\n            <Input type=\"number\" onChange={onChange}/>\n          </FormGroup>\n        )\n      }\n      else {\n        return (<></>)\n      }\n    }\n\n    function DecayInput() {\n      function onChange(e) {\n        setVarAlpha(e.target.value);\n      }\n\n      if (var_method === \"Parametric VaR\"){\n        return (\n          <FormGroup>\n            <Label>Set decay factor for EW-VaR (Leave blank for simple P-VaR)</Label>\n            <Input type=\"text\" onChange={onChange}/>\n          </FormGroup>\n        )\n      }\n      else{\n        return (<></>)\n      }\n    }\n\n    function onSubmit(e){\n      e.preventDefault();\n      console.log(Number(var_alpha));\n      calc_valueatrisk(data, var_method, weights, Number(var_level), Number(var_iterations), Number(var_alpha), port_value); \n    }\n\n    return (\n      <Form onSubmit={onSubmit}>\n        <FormGroup>\n          <Label>Select Calculation Method</Label>\n          <Input type=\"select\" name=\"select\" onChange={onClick}>\n            <option>Historical VaR</option>\n            <option>Parametric VaR</option>\n            <option>Monte Carlo VaR</option>\n          </Input>\n        </FormGroup>\n        <FormGroup>\n          <Label>\n            Enter level\n          </Label>\n          <Input type=\"text\" onChange={onChangeLevel}>\n          </Input>\n        </FormGroup>\n        {IterationsInput()}\n        {DecayInput()}\n        <Button>Calculate</Button>\n      </Form>\n    )\n  }\n\n  function ShowVarResult() {\n    console.log(valueatrisk);\n    if (valueatrisk != null) {\n      console.log('ok')\n      return (\n        <p>Result {valueatrisk}</p>\n      )\n    }\n  }\n\n\n  async function fetch_data (tickers, start_date, end_date) {\n    \n    let request_url = `http://localhost:8888/data/load_hist_stock_price/${start_date}/${end_date}?`;\n    const ticker_list = tickers.split(',').map(function(item){\n      return item.trim();\n    })\n    for (let i = 0; i < ticker_list.length; i++){\n      if (i == 0){\n        request_url += `q=${ticker_list[i]}`;\n      }\n      else{\n        request_url += `&q=${ticker_list[i]}`;\n      }\n      \n    };\n    const response = await fetch(request_url);\n    const data = await response.json();\n    setBasicInfo({})\n    setLineData(chart_data_parser(data));\n    setAnalyticsData(data);\n  }\n\n  async function get_basic_info(data, weights, port_value) {\n    const response = await fetch('http://localhost:8888/portfolio_analysis/get_basic_info', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        data: data,\n        weights: weights,\n        port_value: port_value\n      })\n    })\n\n    const result = await response.json();\n    const parsed = JSON.parse(result[\"result\"])\n    setBasicInfo(parsed);\n    console.log(parsed);\n    return parsed\n  }\n\n  async function calc_valueatrisk(data, method, weights, var_level, var_iterations, var_alpha, port_value){\n    const result = fetch('http://localhost:8888/portfolio_analysis/valueatrisk', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        weights: weights,\n        method: method,\n        data: data,\n        level: var_level,\n        n: var_iterations,\n        alpha: var_alpha,\n        port_value: port_value\n      })\n    }).then((response) => response.json()).then(\n      (responseJSON) => {setValueatrisk(responseJSON[\"result\"]);\n      console.log(responseJSON[\"result\"])}\n    )\n  }\n  \n  async function calc_sharpe_ratio(data, rf){\n    const response = await fetch('http://localhost:8888/portfolio_analysis/sharpe_ratio', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        rf: rf,\n        data: data\n      })\n    })\n\n    const result = await response.json();\n    const parsed = JSON.parse(result[\"result\"])\n    return parsed\n  }\n\n\n\n\n\n  const tickers = Object.keys(data).filter(item => item !== 'date').join(\", \");\n\n  const stock_info_form = <Stock_info_form fetch_data={fetch_data}/>;\n  const file_upload = <Csv_reader handleOnComplete={handleOnComplete} handleOnRemove={handleOnRemove}/>;\n  //TODO: categorize analysis: option -> options, filter -> filters\n  return (\n    <>\n      <div className=\"content\">\n      <Row>\n        <Col md=\"12\">\n          <Card>  \n            <CardHeader>\n                  <CardTitle tag=\"h5\">Get Data</CardTitle>\n            </CardHeader>\n            <CardBody>\n              <SwitchTab Component1 = {stock_info_form} Component2 = {file_upload} button_name1 = \"Fetch Data\" button_name2 = \"Upload File\"/>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n            <Card>\n              <CardBody>\n                <StockPriceChart stock_data={stock_data} />\n              </CardBody>\n            </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          {EnterSpecs()}\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n          {BasicInfoCard()}\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n          <Card className=\"analysis\">\n            <CardHeader>\n              <CardTitle tag=\"h5\">PCA Analysis</CardTitle>\n              <p className=\"card-category\">\n                Tickers: {tickers}\n              </p>\n            </CardHeader>\n            <CardBody className=\"PCA\">\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n          <Card className=\"analysis\">\n            <CardHeader>\n              <CardTitle tag=\"h5\">Optimization</CardTitle>\n              <p className=\"card-category\">\n                Tickers: {tickers}\n              </p>\n            </CardHeader>\n            <CardBody className=\"PCA\">\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      \n      <Row>\n        <Col md=\"12\">\n          <Card className=\"analysis\">\n            <CardHeader>\n              <CardTitle tag=\"h5\">VaR Analysis</CardTitle>\n              <p className=\"card-category\">\n                Tickers: {tickers}\n              </p>\n            </CardHeader>\n            <CardBody className=\"PCA\">\n              {VaRForm()}\n              {ShowVarResult()}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      </div>\n    </>\n  );\n}\n\nexport default PortfolioAnalysis;\n","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/views/Options.js",[],"/Users/xuanmingcui/Documents/projects/analytics-webapp/src/views/Stock.js",["128","129"],"/*!\n\n=========================================================\n* Paper Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/main/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState } from \"react\";\nimport DynamicTable from \"components/Tables/table\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n  Button\n} from \"reactstrap\";\n\nimport Form from 'react-bootstrap/Form';\n\nfunction StockAnalysis() {\n  const [ticker, setTicker] = useState('')\n  const [analysis_info, setAnalysisInfo] = useState()\n\n  function get_analysis_info(){\n    fetch(`http://localhost:8888/stock/get_analysis_info/${ticker}`)\n    .then((response) => response.json())\n    .then((responseData) => {\n      let result = {};\n      for (const [key,value] of Object.entries(responseData[\"result\"])){\n        result[key] = JSON.parse(value)\n      }\n      setAnalysisInfo(result)\n    })\n  }\n\n\n  function StockForm() {\n\n    function handleSubmit(e){\n      e.preventDefault();\n      if (ticker === \"\"){\n        alert('Please enter a symbol to begin with')\n      }\n      else{\n        get_analysis_info()\n      }\n\n    }\n  \n    return (\n      <div class=\"flexbox-container\">\n      <Form onSubmit = {handleSubmit} className = 'settings'>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Enter a single stock symbol</Form.Label>\n            <Form.Control \n              name=\"tickers\" type=\"text\" \n              value={ticker}\n              onChange={e => setTicker(e.target.value)}/>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </div>   \n    )\n  }\n\n  function BasicAnalysis(name){\n    if ((analysis_info != null) && (name in analysis_info)){\n      return (\n        <DynamicTable data={analysis_info[name]}></DynamicTable>\n      )\n    }\n  }\n\n  return (\n    <>\n    <div className=\"content\">\n      <Row>\n        <Col md=\"12\">\n          <Card>\n            <CardBody>\n              {StockForm()}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n          <Card>\n            <CardHeader>Graph</CardHeader>\n            <CardBody>\n              Some graphs\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n          <Card>\n            <CardHeader>Earning Analysis</CardHeader>\n            <CardBody>\n              {BasicAnalysis('Earnings Estimate')}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n          <Card>\n            <CardHeader>Revenue Estimate</CardHeader>\n            <CardBody>\n              {BasicAnalysis('Revenue Estimate')}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n          <Card>\n            <CardHeader>Earnings History</CardHeader>\n            <CardBody>\n              {BasicAnalysis('Earnings History')}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n          <Card>\n            <CardHeader>EPS Trend</CardHeader>\n            <CardBody>\n              {BasicAnalysis('EPS Trend')}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n          <Card>\n            <CardHeader>Growth Estimates</CardHeader>\n            <CardBody>\n              {BasicAnalysis('Growth Estimates')}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n\n    </>\n  );\n}\n\nexport default StockAnalysis;\n","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/views/Sentiment.js",["130","131","132","133","134","135","136"],"import React, { useEffect, useState } from \"react\";\nimport Stock_info_form from \"components/Forms/FetchStockData.js\";\nimport {StockPriceChart} from \"variables/charts.js\" ;\nimport { SwitchTab } from \"components/Switch/ToggleSwitch\";\nimport Csv_reader from \"utils/data.js\"\n\n// reactstrap components\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\n\nfunction SentimentAnalysis() {\n\n  const [stock_data, setLineData] = useState({});\n  const [data, setAnalyticsData] = useState({});\n  const [file_info, setFileInfo] = useState(\"No File Uploaded\")\n  //const [file, upLoadFile] = useState();\n\n  // function handleFileUpload(event) {\n  //   upLoadFile(event.target.files[0])\n  // }\n\n  function chart_data_parser(data){\n    const dataset = [];\n    let labels;\n    if (\"date\" in data){\n      labels = data[\"date\"];\n      delete data[\"date\"];\n    }\n    else if (\"Date\" in data){\n      labels = data[\"Date\"];\n      delete data[\"Date\"];\n    }\n    else{\n      labels = [...Array(Object.keys(data).length).keys()];\n    }\n    for (let i = 0; i < Object.keys(data).length; i ++){\n      let data_dict = {\n        label:Object.keys(data)[i],\n        pointRadius: 0,\n        pointHoverRadius: 0,\n        borderWidth: 3,\n        tension: 0.4,\n        fill: false,\n        data: data[Object.keys(data)[i]]};\n      dataset.push(data_dict)\n    };\n\n    console.log(data)\n    const line_chart_data = {labels: labels, datasets: dataset};\n    return line_chart_data;\n  }\n\n\n  function handleOnComplete (data) {\n    let parsed_data = {};\n    for (let i = 0; i < data[\"data\"].length; i++){\n      if (i ==0){\n        for (let j = 0; j < data[\"data\"][0].length; j++){\n          parsed_data[data[\"data\"][0][j]]=[];\n        }\n      }\n      else{\n        for (let j = 0; j < data[\"data\"][i].length; j++){\n          parsed_data[data[\"data\"][0][j]].push(data[\"data\"][i][j]);\n        }\n      }\n    }\n    setLineData(chart_data_parser(parsed_data));\n    setAnalyticsData(parsed_data);\n    setFileInfo(`File shape: ${data[\"data\"].length} x ${data[\"data\"][0].length}`)\n  }\n\n\n  function handleOnRemove () {\n    setLineData({});\n    setAnalyticsData({})\n  }\n  \n\n  async function fetch_data (tickers, start_date, end_date) {\n    \n    let request_url = `http://localhost:8888/data/load_hist_stock_price/${start_date}/${end_date}?`;\n    const ticker_list = tickers.split(',').map(function(item){\n      return item.trim();\n    })\n    for (let i = 0; i < ticker_list.length; i++){\n      if (i == 0){\n        request_url += `q=${ticker_list[i]}`;\n      }\n      else{\n        request_url += `&q=${ticker_list[i]}`;\n      }\n      \n    };\n    console.log(request_url);\n    const response = await fetch(request_url);\n    const data = await response.json();\n    console.log(1111);\n    \n    setLineData(chart_data_parser(data));\n    setAnalyticsData(data);\n  }\n  const tickers = Object.keys(data).filter(item => item !== 'date').join(\", \");\n\n  const stock_info_form = <div>Enter text or URL</div>\n  const file_upload = <Csv_reader handleOnComplete={handleOnComplete} handleOnRemove={handleOnRemove}/>;\n  //TODO: categorize analysis: option -> options, filter -> filters\n  return (\n    <>\n      <div className=\"content\">\n      <Row>\n        <Col md=\"12\">\n          <Card>\n            <CardHeader>\n                  <CardTitle tag=\"h5\">Get Data</CardTitle>\n            </CardHeader>\n            <CardBody>\n              <SwitchTab Component1 = {stock_info_form} Component2 = {file_upload} button_name1 = \"Fetch Data\" button_name2 = \"Upload File\"/>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n            <Card>\n              <CardBody>\n                <StockPriceChart stock_data={stock_data} />\n              </CardBody>\n            </Card>\n        </Col>\n      </Row>\n          \n      <Row>\n        <Col md=\"12\">\n          <Card className=\"analysis\">\n            <CardHeader>\n              <CardTitle tag=\"h5\">Basic statistics</CardTitle>\n              <p className=\"card-category\">\n                Tickers: {tickers}\n              </p>\n            </CardHeader>\n            <CardBody className=\"PCA\">\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n          <Card className=\"analysis\">\n            <CardHeader>\n              <CardTitle tag=\"h5\">PCA Analysis</CardTitle>\n              <p className=\"card-category\">\n                Tickers: {tickers}\n              </p>\n            </CardHeader>\n            <CardBody className=\"PCA\">\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n          <Card className=\"analysis\">\n            <CardHeader>\n              <CardTitle tag=\"h5\">Optimization</CardTitle>\n              <p className=\"card-category\">\n                Tickers: {tickers}\n              </p>\n            </CardHeader>\n            <CardBody className=\"PCA\">\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      \n      <Row>\n        <Col md=\"12\">\n          <Card className=\"analysis\">\n            <CardHeader>\n              <CardTitle tag=\"h5\">VaR Analysis</CardTitle>\n              <p className=\"card-category\">\n                Tickers: {tickers}\n              </p>\n            </CardHeader>\n            <CardBody className=\"PCA\">\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      </div>\n    </>\n  );\n}\n\nexport default SentimentAnalysis;\n","/Users/xuanmingcui/Documents/projects/analytics-webapp/src/views/Home.js",["137","138","139","140","141","142"],"/Users/xuanmingcui/Documents/projects/analytics-webapp/src/components/Tables/table.js",["143","144","145","146","147","148"],"import React from 'react';\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Table,\n    Row,\n    Col,\n  } from \"reactstrap\";\n\nexport default class DynamicTable extends React.Component {\n    \n    constructor(props){\n      super(props);\n      this.getHeader = this.getHeader.bind(this);\n      this.getRowsData = this.getRowsData.bind(this);\n      this.getKeys = this.getKeys.bind(this);\n    }\n    \n    getKeys = function(){\n      return Object.keys(this.props.data[0]);\n    }\n    \n    getHeader = function(){\n      var keys = this.getKeys();\n      return keys.map((key, index)=>{\n        return <th key={key}>{key.toUpperCase()}</th>\n      })\n    }\n    \n    getRowsData = function(){\n      \n      var items = this.props.data;\n      var keys = this.getKeys();\n      return items.map((row, index)=>{\n        return <tr key={index}><RenderRow key={index} data={row} keys={keys}/></tr>\n      })\n    }\n    \n    render() {\n        return (\n          <div>\n            <Table>\n            <thead>\n              <tr>{this.getHeader()}</tr>\n            </thead>\n            <tbody>\n              {this.getRowsData()}\n            </tbody>\n            </Table>\n          </div>\n          \n        );\n    }\n}\n\nconst RenderRow = (props) =>{\n  return props.keys.map((key, index)=>{\n    return <td key={props.data[key]}>{props.data[key]}</td>\n  })\n}",{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":22,"column":10,"nodeType":"155","messageId":"156","endLine":22,"endColumn":15},{"ruleId":"153","severity":1,"message":"157","line":22,"column":17,"nodeType":"155","messageId":"156","endLine":22,"endColumn":23},{"ruleId":"153","severity":1,"message":"158","line":53,"column":9,"nodeType":"155","messageId":"156","endLine":53,"endColumn":26},{"ruleId":"153","severity":1,"message":"159","line":56,"column":9,"nodeType":"155","messageId":"156","endLine":56,"endColumn":22},{"ruleId":"153","severity":1,"message":"160","line":25,"column":8,"nodeType":"155","messageId":"156","endLine":25,"endColumn":16},{"ruleId":"153","severity":1,"message":"161","line":28,"column":3,"nodeType":"155","messageId":"156","endLine":28,"endColumn":11},{"ruleId":"153","severity":1,"message":"162","line":29,"column":3,"nodeType":"155","messageId":"156","endLine":29,"endColumn":17},{"ruleId":"153","severity":1,"message":"163","line":30,"column":3,"nodeType":"155","messageId":"156","endLine":30,"endColumn":15},{"ruleId":"153","severity":1,"message":"164","line":31,"column":3,"nodeType":"155","messageId":"156","endLine":31,"endColumn":15},{"ruleId":"153","severity":1,"message":"165","line":33,"column":3,"nodeType":"155","messageId":"156","endLine":33,"endColumn":13},{"ruleId":"153","severity":1,"message":"166","line":34,"column":3,"nodeType":"155","messageId":"156","endLine":34,"endColumn":17},{"ruleId":"153","severity":1,"message":"167","line":35,"column":3,"nodeType":"155","messageId":"156","endLine":35,"endColumn":18},{"ruleId":"153","severity":1,"message":"168","line":36,"column":3,"nodeType":"155","messageId":"156","endLine":36,"endColumn":8},{"ruleId":"153","severity":1,"message":"169","line":55,"column":9,"nodeType":"155","messageId":"156","endLine":55,"endColumn":23},{"ruleId":"170","severity":1,"message":"171","line":56,"column":9,"nodeType":"172","endLine":58,"endColumn":10},{"ruleId":"153","severity":1,"message":"173","line":20,"column":16,"nodeType":"155","messageId":"156","endLine":20,"endColumn":19},{"ruleId":"153","severity":1,"message":"174","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"175","line":2,"column":10,"nodeType":"155","messageId":"156","endLine":2,"endColumn":17},{"ruleId":"153","severity":1,"message":"176","line":3,"column":10,"nodeType":"155","messageId":"156","endLine":3,"endColumn":13},{"ruleId":"153","severity":1,"message":"177","line":5,"column":8,"nodeType":"155","messageId":"156","endLine":5,"endColumn":24},{"ruleId":"153","severity":1,"message":"178","line":9,"column":3,"nodeType":"155","messageId":"156","endLine":9,"endColumn":6},{"ruleId":"153","severity":1,"message":"179","line":9,"column":8,"nodeType":"155","messageId":"156","endLine":9,"endColumn":11},{"ruleId":"153","severity":1,"message":"180","line":11,"column":3,"nodeType":"155","messageId":"156","endLine":11,"endColumn":13},{"ruleId":"153","severity":1,"message":"181","line":12,"column":3,"nodeType":"155","messageId":"156","endLine":12,"endColumn":12},{"ruleId":"153","severity":1,"message":"182","line":13,"column":3,"nodeType":"155","messageId":"156","endLine":13,"endColumn":7},{"ruleId":"153","severity":1,"message":"183","line":15,"column":3,"nodeType":"155","messageId":"156","endLine":15,"endColumn":11},{"ruleId":"153","severity":1,"message":"184","line":19,"column":8,"nodeType":"155","messageId":"156","endLine":19,"endColumn":12},{"ruleId":"153","severity":1,"message":"185","line":20,"column":8,"nodeType":"155","messageId":"156","endLine":20,"endColumn":23},{"ruleId":"186","severity":1,"message":"187","line":16,"column":8,"nodeType":"188","endLine":16,"endColumn":10,"suggestions":"189"},{"ruleId":"153","severity":1,"message":"190","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"174","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"191","line":7,"column":9,"nodeType":"155","messageId":"156","endLine":7,"endColumn":23},{"ruleId":"153","severity":1,"message":"164","line":7,"column":25,"nodeType":"155","messageId":"156","endLine":7,"endColumn":37},{"ruleId":"153","severity":1,"message":"163","line":7,"column":39,"nodeType":"155","messageId":"156","endLine":7,"endColumn":51},{"ruleId":"153","severity":1,"message":"162","line":7,"column":53,"nodeType":"155","messageId":"156","endLine":7,"endColumn":67},{"ruleId":"192","severity":1,"message":"193","line":65,"column":13,"nodeType":"194","messageId":"195","endLine":65,"endColumn":15},{"ruleId":"192","severity":1,"message":"193","line":247,"column":13,"nodeType":"194","messageId":"195","endLine":247,"endColumn":15},{"ruleId":"153","severity":1,"message":"196","line":283,"column":11,"nodeType":"155","messageId":"156","endLine":283,"endColumn":17},{"ruleId":"153","severity":1,"message":"197","line":303,"column":18,"nodeType":"155","messageId":"156","endLine":303,"endColumn":35},{"ruleId":"198","severity":1,"message":"199","line":326,"column":27,"nodeType":"172","messageId":"200","endLine":326,"endColumn":69},{"ruleId":"198","severity":1,"message":"201","line":327,"column":23,"nodeType":"172","messageId":"200","endLine":327,"endColumn":104},{"ruleId":"153","severity":1,"message":"181","line":26,"column":3,"nodeType":"155","messageId":"156","endLine":26,"endColumn":12},{"ruleId":"153","severity":1,"message":"202","line":27,"column":3,"nodeType":"155","messageId":"156","endLine":27,"endColumn":8},{"ruleId":"153","severity":1,"message":"174","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"185","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":23},{"ruleId":"153","severity":1,"message":"203","line":14,"column":10,"nodeType":"155","messageId":"156","endLine":14,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":56,"column":13,"nodeType":"194","messageId":"195","endLine":56,"endColumn":15},{"ruleId":"153","severity":1,"message":"204","line":79,"column":18,"nodeType":"155","messageId":"156","endLine":79,"endColumn":28},{"ruleId":"192","severity":1,"message":"193","line":86,"column":13,"nodeType":"194","messageId":"195","endLine":86,"endColumn":15},{"ruleId":"198","severity":1,"message":"201","line":105,"column":23,"nodeType":"172","messageId":"200","endLine":105,"endColumn":104},{"ruleId":"153","severity":1,"message":"205","line":22,"column":10,"nodeType":"155","messageId":"156","endLine":22,"endColumn":14},{"ruleId":"153","severity":1,"message":"173","line":22,"column":16,"nodeType":"155","messageId":"156","endLine":22,"endColumn":19},{"ruleId":"153","severity":1,"message":"206","line":28,"column":3,"nodeType":"155","messageId":"156","endLine":28,"endColumn":13},{"ruleId":"153","severity":1,"message":"202","line":32,"column":3,"nodeType":"155","messageId":"156","endLine":32,"endColumn":8},{"ruleId":"153","severity":1,"message":"207","line":35,"column":8,"nodeType":"155","messageId":"156","endLine":35,"endColumn":14},{"ruleId":"153","severity":1,"message":"184","line":36,"column":8,"nodeType":"155","messageId":"156","endLine":36,"endColumn":12},{"ruleId":"153","severity":1,"message":"182","line":3,"column":5,"nodeType":"155","messageId":"156","endLine":3,"endColumn":9},{"ruleId":"153","severity":1,"message":"180","line":4,"column":5,"nodeType":"155","messageId":"156","endLine":4,"endColumn":15},{"ruleId":"153","severity":1,"message":"208","line":5,"column":5,"nodeType":"155","messageId":"156","endLine":5,"endColumn":13},{"ruleId":"153","severity":1,"message":"181","line":6,"column":5,"nodeType":"155","messageId":"156","endLine":6,"endColumn":14},{"ruleId":"153","severity":1,"message":"178","line":8,"column":5,"nodeType":"155","messageId":"156","endLine":8,"endColumn":8},{"ruleId":"153","severity":1,"message":"179","line":9,"column":5,"nodeType":"155","messageId":"156","endLine":9,"endColumn":8},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'handleActiveClick' is assigned a value but never used.","'handleBgClick' is assigned a value but never used.","'UserPage' is defined but never used.","'Dropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'InputGroup' is defined but never used.","'InputGroupText' is defined but never used.","'InputGroupAddon' is defined but never used.","'Input' is defined but never used.","'dropdownToggle' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Pie' is defined but never used.","'useEffect' is defined but never used.","'NavLink' is defined but never used.","'Nav' is defined but never used.","'PerfectScrollbar' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'CardHeader' is defined but never used.","'CardTitle' is defined but never used.","'Card' is defined but never used.","'Progress' is defined but never used.","'Form' is defined but never used.","'Stock_info_form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'end_date', 'fetch_data', 'start_date', and 'tickers'. Either include them or remove the dependency array. If 'fetch_data' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["211"],"'Component' is defined but never used.","'ButtonDropdown' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'result' is assigned a value but never used.","'calc_sharpe_ratio' is defined but never used.","react/jsx-pascal-case","Imported JSX component Stock_info_form must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","Imported JSX component Csv_reader must be in PascalCase or SCREAMING_SNAKE_CASE","'Table' is defined but never used.","'file_info' is assigned a value but never used.","'fetch_data' is defined but never used.","'Line' is defined but never used.","'CardFooter' is defined but never used.","'Button' is defined but never used.","'CardBody' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},"Update the dependencies array to be: [end_date, fetch_data, start_date, tickers]",{"range":"214","text":"215"},[524,526],"[end_date, fetch_data, start_date, tickers]"]