{"ast":null,"code":"import _defineProperty from \"/Users/xuanmingcui/Documents/projects/ailab-webapp-frontend/analytics-webapp/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/xuanmingcui/Documents/projects/ailab-webapp-frontend/analytics-webapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/xuanmingcui/Documents/projects/ailab-webapp-frontend/analytics-webapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/xuanmingcui/Documents/projects/ailab-webapp-frontend/analytics-webapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/xuanmingcui/Documents/projects/ailab-webapp-frontend/analytics-webapp/src/views/DataIntelligence/CDS.js\",\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/Users/xuanmingcui/Documents/projects/ailab-webapp-frontend/analytics-webapp/node_modules/@babel/runtime/regenerator/index.js\";\n\n/*!\n\n=========================================================\n* Paper Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/main/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useEffect, useState } from \"react\"; // reactstrap components\n\nimport { Card, CardHeader, CardBody, Row, Col, Label, Input, Form, FormGroup, Button } from \"reactstrap\";\nimport DynamicTable from \"components/Tables/table\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport AsyncSelect from 'react-select/async';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CDSView() {\n  _s();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      ticker = _useState2[0],\n      SetTicker = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      expiration_list = _useState4[0],\n      SetExpirationList = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      expiration_date = _useState6[0],\n      SetExpirationDate = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      options_type = _useState8[0],\n      SetOptionsType = _useState8[1];\n\n  var _useState9 = useState({\n    \"REGION\": [],\n    \"INDUSTRY\": [],\n    \"OBLIGATION_ASSETRANK\": [],\n    \"CREDIT_EVENTS\": []\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      cds_specs = _useState10[0],\n      SetCDSDataSpecs = _useState10[1];\n\n  var _useState11 = useState({\n    \"REGION\": [],\n    \"INDUSTRY\": [],\n    \"OBLIGATION_ASSETRANK\": [],\n    \"CREDIT_EVENTS\": []\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      cds_specs_list = _useState12[0],\n      SetCDSSpecsList = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      cds_data = _useState14[0],\n      SetCDSData = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      options_data = _useState16[0],\n      SetOptionData = _useState16[1];\n\n  var _useState17 = useState(),\n      _useState18 = _slicedToArray(_useState17, 2),\n      options_price = _useState18[0],\n      SetOptionsPrice = _useState18[1];\n\n  function fetch_cds_param_values(_x) {\n    return _fetch_cds_param_values.apply(this, arguments);\n  }\n\n  function _fetch_cds_param_values() {\n    _fetch_cds_param_values = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(param) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              fetch(\"http://localhost:8888/data/data_warehouse/cds_get_unique_val/\".concat(param)).then(function (response) {\n                return response.json();\n              }).then(function (responseData) {\n                var result = responseData[\"result\"];\n                var filterOptions = result.map(function (option) {\n                  return {\n                    \"value\": option,\n                    \"label\": option\n                  };\n                });\n                SetCDSSpecsList(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, param, filterOptions));\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _fetch_cds_param_values.apply(this, arguments);\n  }\n\n  function get_cds_data() {\n    return _get_cds_data.apply(this, arguments);\n  }\n\n  function _get_cds_data() {\n    _get_cds_data = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              result = fetch('http://localhost:8888/data/data_warehouse/get_cds_data', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(cds_specs)\n              }).then(function (response) {\n                return response.json();\n              }).then(function (responseJSON) {\n                SetCDSData(responseJSON[\"result\"]);\n                console.log(responseJSON[\"result\"]);\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _get_cds_data.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    Object.keys(cds_specs_list).map(function (key, index) {\n      return fetch_cds_param_values(key);\n    });\n  }, []);\n\n  function CDSFilter(param) {\n    function handleMultiSelect(e) {\n      console.log(e.target.value);\n      SetCDSDataSpecs(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, param, e.target.value));\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: param\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        isMulti: true,\n        name: \"param\",\n        options: cds_specs_list[param],\n        className: \"cds-multi-select\",\n        onChange: handleMultiSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this);\n  }\n\n  function CDSDataForm() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: function onSubmit(e) {\n          e.preventDefault();\n          get_cds_data();\n        },\n        children: [CDSFilter(\"REGION\"), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: \"Get CDS Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: CDSDataForm()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(CDSView, \"SKAeP64bvpTbQXOKsW1cfuUD64c=\");\n\n_c = CDSView;\nexport default CDSView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CDSView\");","map":{"version":3,"sources":["/Users/xuanmingcui/Documents/projects/ailab-webapp-frontend/analytics-webapp/src/views/DataIntelligence/CDS.js"],"names":["React","useEffect","useState","Card","CardHeader","CardBody","Row","Col","Label","Input","Form","FormGroup","Button","DynamicTable","Select","makeAnimated","AsyncSelect","CDSView","ticker","SetTicker","expiration_list","SetExpirationList","expiration_date","SetExpirationDate","options_type","SetOptionsType","cds_specs","SetCDSDataSpecs","cds_specs_list","SetCDSSpecsList","cds_data","SetCDSData","options_data","SetOptionData","options_price","SetOptionsPrice","fetch_cds_param_values","param","fetch","then","response","json","responseData","result","filterOptions","map","option","prevState","get_cds_data","method","headers","body","JSON","stringify","responseJSON","console","log","Object","keys","key","index","CDSFilter","handleMultiSelect","e","target","value","CDSDataForm","preventDefault"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Paper Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/main/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useEffect, useState } from \"react\";\n\n// reactstrap components\nimport { Card, CardHeader, CardBody, Row, Col, Label, Input, Form, FormGroup, Button} from \"reactstrap\";\nimport DynamicTable from \"components/Tables/table\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport AsyncSelect from 'react-select/async';\n\n\nfunction CDSView() {\n  const [ticker, SetTicker] = useState();\n  const [expiration_list, SetExpirationList] = useState([])\n  const [expiration_date, SetExpirationDate] = useState()\n  const [options_type, SetOptionsType] = useState(\"\")\n  const [cds_specs, SetCDSDataSpecs] = useState({\"REGION\": [], \"INDUSTRY\": [], \"OBLIGATION_ASSETRANK\":[], \"CREDIT_EVENTS\": []})\n  const [cds_specs_list, SetCDSSpecsList] = useState({\"REGION\": [], \"INDUSTRY\": [], \"OBLIGATION_ASSETRANK\":[], \"CREDIT_EVENTS\": []})\n  const [cds_data, SetCDSData] = useState()\n  const [options_data, SetOptionData] = useState([])\n  const [options_price, SetOptionsPrice] = useState()\n\n\n  async function fetch_cds_param_values(param){\n    fetch(`http://localhost:8888/data/data_warehouse/cds_get_unique_val/${param}`)\n    .then((response) => response.json())\n    .then((responseData) => {\n      let result = responseData[\"result\"];\n\n      let filterOptions = result.map((option)=> ({\"value\":option, \"label\":option}))\n      SetCDSSpecsList((prevState) => ({\n        ...prevState,\n        [param]: filterOptions\n      }))\n    })\n  }\n\n  async function get_cds_data(){\n    const result = fetch('http://localhost:8888/data/data_warehouse/get_cds_data', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(cds_specs)\n      }).then((response) => response.json()).then(\n        (responseJSON) => {SetCDSData(responseJSON[\"result\"]);\n        console.log(responseJSON[\"result\"])}\n      )\n  }\n\n\n  useEffect(()=>{\n    Object.keys(cds_specs_list).map((key,index)=>(\n    \n        fetch_cds_param_values(key)\n    ))\n  }, [])\n\n  function CDSFilter(param){\n    function handleMultiSelect(e) {\n        console.log(e.target.value)\n        SetCDSDataSpecs(prevState => ({\n            ...prevState,\n            [param]: e.target.value\n          }))\n    }\n      return (\n          <div>\n              <label>{param}</label>\n              <Select\n                isMulti\n                name=\"param\"\n                options={cds_specs_list[param]}\n                className=\"cds-multi-select\"\n                onChange={handleMultiSelect}\n              />\n          </div>\n      )\n  }\n\n  function CDSDataForm () {\n\n\n    return (\n      <div>\n      <Form  onSubmit={(e) => {e.preventDefault(); get_cds_data()}}>\n        {CDSFilter(\"REGION\")}\n        <Button>Submit</Button>\n      </Form>\n      </div>\n    )\n  }\n\n\n\n\n\n\n  return (\n    <>\n    <div className=\"content\">\n      <Row>\n        <Col md=\"12\">\n          <Card>\n            <CardHeader>Get CDS Data</CardHeader>\n            <CardBody>\n              {CDSDataForm()}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      \n    </div>\n    </>\n  );\n}\n\nexport default CDSView;\n"]},"metadata":{},"sourceType":"module"}