{"ast":null,"code":"import _regeneratorRuntime from \"/Users/xuanmingcui/Documents/projects/analytics-webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/xuanmingcui/Documents/projects/analytics-webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/xuanmingcui/Documents/projects/analytics-webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/xuanmingcui/Documents/projects/analytics-webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/xuanmingcui/Documents/projects/analytics-webapp/src/views/Portfolio.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Stock_info_form from \"components/Forms/FetchStockData.js\";\nimport { StockPriceChart } from \"variables/charts.js\";\nimport { SwitchTab } from \"components/Switch/ToggleSwitch\";\nimport Csv_reader from \"utils/data.js\";\nimport dynamicTable from \"components/Tables/table.js\"; // reactstrap components\n\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PortfolioAnalysis() {\n  _s();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      stock_data = _useState2[0],\n      setLineData = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setAnalyticsData = _useState4[1];\n\n  var _useState5 = useState(\"No File Uploaded\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      file_info = _useState6[0],\n      setFileInfo = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      basic_info = _useState8[0],\n      setBasicInfo = _useState8[1]; //const [file, upLoadFile] = useState();\n  // function handleFileUpload(event) {\n  //   upLoadFile(event.target.files[0])\n  // }\n\n\n  function chart_data_parser(data) {\n    var dataset = [];\n    var labels;\n\n    if (\"date\" in data) {\n      labels = data[\"date\"];\n      delete data[\"date\"];\n    } else if (\"Date\" in data) {\n      labels = data[\"Date\"];\n      delete data[\"Date\"];\n    } else {\n      labels = _toConsumableArray(Array(Object.keys(data).length).keys());\n    }\n\n    for (var i = 0; i < Object.keys(data).length; i++) {\n      var data_dict = {\n        label: Object.keys(data)[i],\n        pointRadius: 0,\n        pointHoverRadius: 0,\n        borderWidth: 3,\n        tension: 0.4,\n        fill: false,\n        data: data[Object.keys(data)[i]]\n      };\n      dataset.push(data_dict);\n    }\n\n    ;\n    var line_chart_data = {\n      labels: labels,\n      datasets: dataset\n    };\n    return line_chart_data;\n  }\n\n  function handleOnComplete(data) {\n    var parsed_data = {};\n\n    for (var i = 0; i < data[\"data\"].length; i++) {\n      if (i == 0) {\n        for (var j = 0; j < data[\"data\"][0].length; j++) {\n          parsed_data[data[\"data\"][0][j]] = [];\n        }\n      } else {\n        for (var _j = 0; _j < data[\"data\"][i].length; _j++) {\n          parsed_data[data[\"data\"][0][_j]].push(data[\"data\"][i][_j]);\n        }\n      }\n    }\n\n    setLineData(chart_data_parser(parsed_data));\n    setAnalyticsData(parsed_data);\n    setFileInfo(\"File shape: \".concat(data[\"data\"].length, \" x \").concat(data[\"data\"][0].length));\n    setBasicInfo(get_basic_info(parsed_data));\n  }\n\n  function handleOnRemove() {\n    setLineData({});\n    setAnalyticsData({});\n    setBasicInfo({});\n  }\n\n  function fetch_data(_x, _x2, _x3) {\n    return _fetch_data.apply(this, arguments);\n  }\n\n  function _fetch_data() {\n    _fetch_data = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tickers, start_date, end_date) {\n      var request_url, ticker_list, i, response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              request_url = \"http://localhost:8888/data/load_hist_stock_price/\".concat(start_date, \"/\").concat(end_date, \"?\");\n              ticker_list = tickers.split(',').map(function (item) {\n                return item.trim();\n              });\n\n              for (i = 0; i < ticker_list.length; i++) {\n                if (i == 0) {\n                  request_url += \"q=\".concat(ticker_list[i]);\n                } else {\n                  request_url += \"&q=\".concat(ticker_list[i]);\n                }\n              }\n\n              ;\n              console.log(request_url);\n              _context.next = 7;\n              return fetch(request_url);\n\n            case 7:\n              response = _context.sent;\n              _context.next = 10;\n              return response.json();\n\n            case 10:\n              data = _context.sent;\n              setLineData(chart_data_parser(data));\n              setAnalyticsData(data);\n              setBasicInfo(get_basic_info(data));\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _fetch_data.apply(this, arguments);\n  }\n\n  function get_basic_info(_x4) {\n    return _get_basic_info.apply(this, arguments);\n  }\n\n  function _get_basic_info() {\n    _get_basic_info = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n      var response, basic_info;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(JSON.stringify({\n                data: data\n              }));\n              _context2.next = 3;\n              return fetch('http://localhost:8888/portfolio_analysis/get_basic_info', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  data: data\n                })\n              });\n\n            case 3:\n              response = _context2.sent;\n              _context2.next = 6;\n              return response.json();\n\n            case 6:\n              basic_info = _context2.sent;\n              return _context2.abrupt(\"return\", basic_info[\"result\"]);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _get_basic_info.apply(this, arguments);\n  }\n\n  var tickers = Object.keys(data).filter(function (item) {\n    return item !== 'date';\n  }).join(\", \");\n\n  var stock_info_form = /*#__PURE__*/_jsxDEV(Stock_info_form, {\n    fetch_data: fetch_data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 27\n  }, this);\n\n  var file_upload = /*#__PURE__*/_jsxDEV(Csv_reader, {\n    handleOnComplete: handleOnComplete,\n    handleOnRemove: handleOnRemove\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 23\n  }, this); //TODO: categorize analysis: option -> options, filter -> filters\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: /*#__PURE__*/_jsxDEV(CardTitle, {\n                tag: \"h5\",\n                children: \"Get Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(SwitchTab, {\n                Component1: stock_info_form,\n                Component2: file_upload,\n                button_name1: \"Fetch Data\",\n                button_name2: \"Upload File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(StockPriceChart, {\n                stock_data: stock_data\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"analysis\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                tag: \"h5\",\n                children: \"Basic statistics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-category\",\n                children: [\"Tickers: \", tickers]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \"basic_info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"analysis\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                tag: \"h5\",\n                children: \"PCA Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-category\",\n                children: [\"Tickers: \", tickers]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \"PCA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"analysis\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                tag: \"h5\",\n                children: \"Optimization\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-category\",\n                children: [\"Tickers: \", tickers]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \"PCA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"analysis\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                tag: \"h5\",\n                children: \"VaR Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-category\",\n                children: [\"Tickers: \", tickers]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \"PCA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(PortfolioAnalysis, \"mVelt8w2AFU9bQyCxXfKmc1yBYk=\");\n\n_c = PortfolioAnalysis;\nexport default PortfolioAnalysis;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioAnalysis\");","map":{"version":3,"sources":["/Users/xuanmingcui/Documents/projects/analytics-webapp/src/views/Portfolio.js"],"names":["React","useEffect","useState","Stock_info_form","StockPriceChart","SwitchTab","Csv_reader","dynamicTable","Card","CardHeader","CardBody","CardTitle","Row","Col","PortfolioAnalysis","stock_data","setLineData","data","setAnalyticsData","file_info","setFileInfo","basic_info","setBasicInfo","chart_data_parser","dataset","labels","Array","Object","keys","length","i","data_dict","label","pointRadius","pointHoverRadius","borderWidth","tension","fill","push","line_chart_data","datasets","handleOnComplete","parsed_data","j","get_basic_info","handleOnRemove","fetch_data","tickers","start_date","end_date","request_url","ticker_list","split","map","item","trim","console","log","fetch","response","json","JSON","stringify","method","headers","body","filter","join","stock_info_form","file_upload"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Stock_info_form from \"components/Forms/FetchStockData.js\";\nimport {StockPriceChart} from \"variables/charts.js\" ;\nimport { SwitchTab } from \"components/Switch/ToggleSwitch\";\nimport Csv_reader from \"utils/data.js\"\nimport dynamicTable from \"components/Tables/table.js\"\n\n// reactstrap components\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\n\nfunction PortfolioAnalysis() {\n\n  const [stock_data, setLineData] = useState({});\n  const [data, setAnalyticsData] = useState({});\n  const [file_info, setFileInfo] = useState(\"No File Uploaded\")\n  const [basic_info, setBasicInfo] = useState({})\n  //const [file, upLoadFile] = useState();\n\n  // function handleFileUpload(event) {\n  //   upLoadFile(event.target.files[0])\n  // }\n\n  function chart_data_parser(data){\n    const dataset = [];\n    let labels;\n    if (\"date\" in data){\n      labels = data[\"date\"];\n      delete data[\"date\"];\n    }\n    else if (\"Date\" in data){\n      labels = data[\"Date\"];\n      delete data[\"Date\"];\n    }\n    else{\n      labels = [...Array(Object.keys(data).length).keys()];\n    }\n    for (let i = 0; i < Object.keys(data).length; i ++){\n      let data_dict = {\n        label:Object.keys(data)[i],\n        pointRadius: 0,\n        pointHoverRadius: 0,\n        borderWidth: 3,\n        tension: 0.4,\n        fill: false,\n        data: data[Object.keys(data)[i]]};\n      dataset.push(data_dict)\n    };\n\n    const line_chart_data = {labels: labels, datasets: dataset};\n    return line_chart_data;\n  }\n\n\n  function handleOnComplete (data) {\n    let parsed_data = {};\n    for (let i = 0; i < data[\"data\"].length; i++){\n      if (i ==0){\n        for (let j = 0; j < data[\"data\"][0].length; j++){\n          parsed_data[data[\"data\"][0][j]]=[];\n        }\n      }\n      else{\n        for (let j = 0; j < data[\"data\"][i].length; j++){\n          parsed_data[data[\"data\"][0][j]].push(data[\"data\"][i][j]);\n        }\n      }\n    }\n    setLineData(chart_data_parser(parsed_data));\n    setAnalyticsData(parsed_data);\n    setFileInfo(`File shape: ${data[\"data\"].length} x ${data[\"data\"][0].length}`)\n    setBasicInfo(get_basic_info(parsed_data));\n  }\n\n\n  function handleOnRemove () {\n    setLineData({});\n    setAnalyticsData({})\n    setBasicInfo({})\n  }\n  \n\n  async function fetch_data (tickers, start_date, end_date) {\n    \n    let request_url = `http://localhost:8888/data/load_hist_stock_price/${start_date}/${end_date}?`;\n    const ticker_list = tickers.split(',').map(function(item){\n      return item.trim();\n    })\n    for (let i = 0; i < ticker_list.length; i++){\n      if (i == 0){\n        request_url += `q=${ticker_list[i]}`;\n      }\n      else{\n        request_url += `&q=${ticker_list[i]}`;\n      }\n      \n    };\n    console.log(request_url);\n    const response = await fetch(request_url);\n    const data = await response.json();\n    setLineData(chart_data_parser(data));\n    setAnalyticsData(data);\n    setBasicInfo(get_basic_info(data))\n  }\n\n  async function get_basic_info(data) {\n    console.log(JSON.stringify({\n      data: data\n    }))\n    const response = await fetch('http://localhost:8888/portfolio_analysis/get_basic_info', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        data: data\n      })\n    });\n\n    const basic_info = await response.json();\n    return basic_info[\"result\"];\n  }\n\n\n  const tickers = Object.keys(data).filter(item => item !== 'date').join(\", \");\n\n  const stock_info_form = <Stock_info_form fetch_data={fetch_data}/>;\n  const file_upload = <Csv_reader handleOnComplete={handleOnComplete} handleOnRemove={handleOnRemove}/>;\n  //TODO: categorize analysis: option -> options, filter -> filters\n  return (\n    <>\n      <div className=\"content\">\n      <Row>\n        <Col md=\"12\">\n          <Card>  \n            <CardHeader>\n                  <CardTitle tag=\"h5\">Get Data</CardTitle>\n            </CardHeader>\n            <CardBody>\n              <SwitchTab Component1 = {stock_info_form} Component2 = {file_upload} button_name1 = \"Fetch Data\" button_name2 = \"Upload File\"/>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n            <Card>\n              <CardBody>\n                <StockPriceChart stock_data={stock_data} />\n              </CardBody>\n            </Card>\n        </Col>\n      </Row>\n          \n      <Row>\n        <Col md=\"12\">\n          <Card className=\"analysis\">\n            <CardHeader>\n              <CardTitle tag=\"h5\">Basic statistics</CardTitle>\n              <p className=\"card-category\">\n                Tickers: {tickers}\n              </p>\n            </CardHeader>\n            <CardBody className=\"basic_info\">\n\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n          <Card className=\"analysis\">\n            <CardHeader>\n              <CardTitle tag=\"h5\">PCA Analysis</CardTitle>\n              <p className=\"card-category\">\n                Tickers: {tickers}\n              </p>\n            </CardHeader>\n            <CardBody className=\"PCA\">\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n          <Card className=\"analysis\">\n            <CardHeader>\n              <CardTitle tag=\"h5\">Optimization</CardTitle>\n              <p className=\"card-category\">\n                Tickers: {tickers}\n              </p>\n            </CardHeader>\n            <CardBody className=\"PCA\">\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      \n      <Row>\n        <Col md=\"12\">\n          <Card className=\"analysis\">\n            <CardHeader>\n              <CardTitle tag=\"h5\">VaR Analysis</CardTitle>\n              <p className=\"card-category\">\n                Tickers: {tickers}\n              </p>\n            </CardHeader>\n            <CardBody className=\"PCA\">\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      </div>\n    </>\n  );\n}\n\nexport default PortfolioAnalysis;\n"]},"metadata":{},"sourceType":"module"}