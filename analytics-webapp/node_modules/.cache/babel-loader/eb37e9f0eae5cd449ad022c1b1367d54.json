{"ast":null,"code":"import _regeneratorRuntime from \"/Users/xuanmingcui/Documents/projects/analytics-webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/xuanmingcui/Documents/projects/analytics-webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/xuanmingcui/Documents/projects/analytics-webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/xuanmingcui/Documents/projects/analytics-webapp/src/views/Analysis.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Stock_info_form from \"components/Forms/FetchStockData.js\";\nimport { StockPriceChart } from \"variables/charts.js\"; // reactstrap components\n\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Analysis() {\n  _s();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      stock_data = _useState2[0],\n      setStock_data = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      SetAnalyticsData = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      file = _useState6[0],\n      upLoadFile = _useState6[1];\n\n  function fetch_data(_x, _x2, _x3) {\n    return _fetch_data.apply(this, arguments);\n  }\n\n  function _fetch_data() {\n    _fetch_data = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tickers, start_date, end_date) {\n      var request_url, ticker_list, i, response, data, dataset, _i, data_dict, line_chart_data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              request_url = \"http://localhost:8000/data/load_hist_stock_price/\".concat(start_date, \"/\").concat(end_date, \"?\");\n              ticker_list = tickers.split(',').map(function (item) {\n                return item.trim();\n              });\n\n              for (i = 0; i < ticker_list.length; i++) {\n                if (i == 0) {\n                  request_url += \"q=\".concat(ticker_list[i]);\n                  console.log(\"q=\".concat(ticker_list[i]));\n                } else {\n                  request_url += \"&q=\".concat(ticker_list[i]);\n                  console.log(\"q=\".concat(ticker_list[i]));\n                }\n              }\n\n              ;\n              _context.next = 6;\n              return fetch(request_url);\n\n            case 6:\n              response = _context.sent;\n              _context.next = 9;\n              return response.json();\n\n            case 9:\n              data = _context.sent;\n              dataset = [];\n\n              for (_i = 0; _i < ticker_list.length; _i++) {\n                data_dict = {\n                  label: ticker_list[_i],\n                  pointRadius: 0,\n                  pointHoverRadius: 0,\n                  borderWidth: 3,\n                  tension: 0.4,\n                  fill: false,\n                  data: data[ticker_list[_i]]\n                };\n                dataset.push(data_dict);\n              }\n\n              ;\n              line_chart_data = {\n                labels: data['date'],\n                datasets: dataset\n              };\n              setStock_data(line_chart_data);\n              SetAnalyticsData(data);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _fetch_data.apply(this, arguments);\n  }\n\n  var tickers = Object.keys(data).filter(function (item) {\n    return item !== 'date';\n  }).join(\", \");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: /*#__PURE__*/_jsxDEV(CardTitle, {\n              tag: \"h5\",\n              children: \"Select Stock Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"2\",\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: /*#__PURE__*/_jsxDEV(Stock_info_form, {\n                  fetch_data: fetch_data\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"10\",\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: /*#__PURE__*/_jsxDEV(StockPriceChart, {\n                  stock_data: stock_data\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"analysis\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                tag: \"h5\",\n                children: \"PCA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-category\",\n                children: [\"Tickers: \", tickers]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \"PCA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"analysis\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                tag: \"h5\",\n                children: \"PCA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-category\",\n                children: [\"Tickers: \", tickers]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \"PCA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Analysis, \"zPCrTtZbYb2qo5Q76EDMdEyWZ4c=\");\n\n_c = Analysis;\nexport default Analysis;\n\nvar _c;\n\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"sources":["/Users/xuanmingcui/Documents/projects/analytics-webapp/src/views/Analysis.js"],"names":["React","useEffect","useState","Stock_info_form","StockPriceChart","Card","CardHeader","CardBody","CardTitle","Row","Col","Analysis","stock_data","setStock_data","data","SetAnalyticsData","file","upLoadFile","fetch_data","tickers","start_date","end_date","request_url","ticker_list","split","map","item","trim","i","length","console","log","fetch","response","json","dataset","data_dict","label","pointRadius","pointHoverRadius","borderWidth","tension","fill","push","line_chart_data","labels","datasets","Object","keys","filter","join"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Stock_info_form from \"components/Forms/FetchStockData.js\";\nimport {StockPriceChart} from \"variables/charts.js\" ;\n\n// reactstrap components\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\n\nfunction Analysis() {\n\n  const [stock_data, setStock_data] = useState({});\n  const [data, SetAnalyticsData] = useState({});\n  const [file, upLoadFile] = useState();\n\n  async function fetch_data (tickers, start_date, end_date) {\n    \n    let request_url = `http://localhost:8000/data/load_hist_stock_price/${start_date}/${end_date}?`;\n    const ticker_list = tickers.split(',').map(function(item){\n      return item.trim();\n    })\n    for (let i = 0; i < ticker_list.length; i++){\n      if (i == 0){\n        request_url += `q=${ticker_list[i]}`;\n        console.log(`q=${ticker_list[i]}`)\n      }\n      else{\n        request_url += `&q=${ticker_list[i]}`;\n        console.log(`q=${ticker_list[i]}`)\n      }\n      \n    };\n    const response = await fetch(request_url);\n    const data = await response.json();\n    const dataset = [];\n    for (let i = 0; i < ticker_list.length; i ++){\n      let data_dict = {\n        label:ticker_list[i],\n        pointRadius: 0,\n        pointHoverRadius: 0,\n        borderWidth: 3,\n        tension: 0.4,\n        fill: false,\n        data: data[ticker_list[i]]};\n        dataset.push(data_dict)\n    };\n    const line_chart_data = {labels: data['date'], datasets: dataset};\n    setStock_data(line_chart_data);\n    SetAnalyticsData(data);\n  }\n  const tickers = Object.keys(data).filter(item => item !== 'date').join(\", \");\n  return (\n    <>\n      <div className=\"content\">\n      <Row>\n          <Card>\n            <CardHeader>\n                  <CardTitle tag=\"h5\">Select Stock Data</CardTitle>\n            </CardHeader>\n            <Row>\n              <Col md='2'>\n                <CardBody>\n                  <Stock_info_form fetch_data={fetch_data} />\n                </CardBody>\n              </Col>\n              <Col md=\"10\">\n                <CardBody>\n                  <StockPriceChart stock_data={stock_data} />\n                </CardBody>\n              </Col>\n            </Row>\n          </Card>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n          <Card className=\"analysis\">\n            <CardHeader>\n              <CardTitle tag=\"h5\">PCA</CardTitle>\n              <p className=\"card-category\">\n                Tickers: {tickers}\n              </p>\n            </CardHeader>\n            <CardBody className=\"PCA\">\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n          <Card className=\"analysis\">\n            <CardHeader>\n              <CardTitle tag=\"h5\">PCA</CardTitle>\n              <p className=\"card-category\">\n                Tickers: {tickers}\n              </p>\n            </CardHeader>\n            <CardBody className=\"PCA\">\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      </div>\n    </>\n  );\n}\n\nexport default Analysis;\n"]},"metadata":{},"sourceType":"module"}