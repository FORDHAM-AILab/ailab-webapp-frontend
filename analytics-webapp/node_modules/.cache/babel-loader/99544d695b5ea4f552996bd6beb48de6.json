{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _events = require('events');\n\nvar _ndarray = require('ndarray');\n\nvar _ndarray2 = _interopRequireDefault(_ndarray);\n\nvar _ndarrayOps = require('ndarray-ops');\n\nvar _ndarrayOps2 = _interopRequireDefault(_ndarrayOps);\n\nvar _ndarrayPack = require('ndarray-pack');\n\nvar _ndarrayPack2 = _interopRequireDefault(_ndarrayPack);\n\nvar _ndarrayUnpack = require('ndarray-unpack');\n\nvar _ndarrayUnpack2 = _interopRequireDefault(_ndarrayUnpack);\n\nvar _cwise = require('cwise');\n\nvar _cwise2 = _interopRequireDefault(_cwise);\n\nvar _randn = require('./randn');\n\nvar _randn2 = _interopRequireDefault(_randn);\n\nvar _pairwiseDistances = require('./pairwise-distances');\n\nvar _pairwiseDistances2 = _interopRequireDefault(_pairwiseDistances);\n\nvar _jointProbabilities = require('./joint-probabilities');\n\nvar _jointProbabilities2 = _interopRequireDefault(_jointProbabilities);\n\nvar _klDivergence = require('./kl-divergence');\n\nvar _klDivergence2 = _interopRequireDefault(_klDivergence);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TSNE = function (_EventEmitter) {\n  _inherits(TSNE, _EventEmitter);\n\n  function TSNE(config) {\n    _classCallCheck(this, TSNE);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(TSNE).call(this));\n\n    config = config || {};\n    _this.dim = config.dim || 2;\n    _this.perplexity = config.perplexity || 30.0;\n    _this.earlyExaggeration = config.earlyExaggeration || 4.0;\n    _this.learningRate = config.learningRate || 1000.0;\n    _this.nIter = config.nIter || 1000;\n    _this.metric = config.metric || 'euclidean';\n    _this.barneshut = config.barneshut || false;\n    _this.inputData = null;\n    _this.outputEmbedding = null;\n    return _this;\n  }\n\n  _createClass(TSNE, [{\n    key: 'init',\n    value: function init(opts) {\n      opts = opts || {};\n      var inputData = opts.data || [];\n      var type = opts.type || 'dense'; // format input data as ndarray\n\n      if (type === 'dense') {\n        this.inputData = (0, _ndarrayPack2.default)(inputData);\n      } else if (type === 'sparse') {\n        var shape = [];\n        var size = 1;\n\n        var _loop = function _loop(d) {\n          var dimShape = Math.max.apply(null, inputData.map(function (coord) {\n            return coord[d];\n          })) + 1;\n          shape.push(dimShape);\n          size *= dimShape;\n        };\n\n        for (var d = 0; d < inputData[0].length; d++) {\n          _loop(d);\n        }\n\n        this.inputData = (0, _ndarray2.default)(new Float64Array(size), shape);\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = inputData[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _inputData;\n\n            var coord = _step.value;\n\n            (_inputData = this.inputData).set.apply(_inputData, _toConsumableArray(coord).concat([1]));\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      } else {\n        throw new Error('input data type must be dense or sparse');\n      } // random initialization of output embedding\n\n\n      this.outputEmbedding = (0, _randn2.default)(this.inputData.shape[0], this.dim);\n    }\n  }, {\n    key: 'run',\n    value: function run() {\n      // calculate pairwise distances\n      this.emit('progressStatus', 'Calculating pairwise distances');\n      this.distances = (0, _pairwiseDistances2.default)(this.inputData, this.metric);\n      this.emit('progressStatus', 'Calculating joint probabilities');\n      this.alpha = Math.max(this.dim - 1, 1);\n      this.P = (0, _jointProbabilities2.default)(this.distances, this.perplexity);\n      var error = Number.MAX_VALUE;\n      var iter = 0; // early exaggeration\n\n      this.emit('progressStatus', 'Early exaggeration with momentum 0.5');\n\n      _ndarrayOps2.default.mulseq(this.P, this.earlyExaggeration);\n\n      var _gradDesc2 = this._gradDesc(iter, 50, 0.5, 0.0, 0.0);\n\n      var _gradDesc3 = _slicedToArray(_gradDesc2, 2);\n\n      error = _gradDesc3[0];\n      iter = _gradDesc3[1];\n      this.emit('progressStatus', 'Early exaggeration with momentum 0.8'); // final optimization\n\n      var _gradDesc4 = this._gradDesc(iter + 1, 100, 0.8, 0.0, 0.0);\n\n      var _gradDesc5 = _slicedToArray(_gradDesc4, 2);\n\n      error = _gradDesc5[0];\n      iter = _gradDesc5[1];\n      this.emit('progressStatus', 'Final optimization with momentum 0.8');\n\n      _ndarrayOps2.default.divseq(this.P, this.earlyExaggeration);\n\n      var _gradDesc6 = this._gradDesc(iter + 1, this.nIter, 0.8, 1e-6, 1e-6);\n\n      var _gradDesc7 = _slicedToArray(_gradDesc6, 2);\n\n      error = _gradDesc7[0];\n      iter = _gradDesc7[1];\n      this.emit('progressStatus', 'Optimization end');\n      return [error, iter];\n    }\n  }, {\n    key: 'rerun',\n    value: function rerun() {\n      // random re-initialization of output embedding\n      this.outputEmbedding = (0, _randn2.default)(this.inputData.shape[0], this.dim); // re-run with gradient descent\n\n      var _run = this.run();\n\n      var _run2 = _slicedToArray(_run, 2);\n\n      var error = _run2[0];\n      var iter = _run2[1];\n      return [error, iter];\n    }\n  }, {\n    key: 'getOutput',\n    value: function getOutput() {\n      return (0, _ndarrayUnpack2.default)(this.outputEmbedding);\n    }\n  }, {\n    key: 'getOutputScaled',\n    value: function getOutputScaled() {\n      // scale output embedding to [-1, 1]\n      var outputEmbeddingScaled = (0, _ndarray2.default)(new Float64Array(this.outputEmbedding.size), this.outputEmbedding.shape);\n      var temp = (0, _ndarray2.default)(new Float64Array(this.outputEmbedding.shape[0]), [this.outputEmbedding.shape[0]]);\n\n      for (var d = 0; d < this.outputEmbedding.shape[1]; d++) {\n        var maxVal = _ndarrayOps2.default.sup(_ndarrayOps2.default.abs(temp, this.outputEmbedding.pick(null, d)));\n\n        _ndarrayOps2.default.divs(outputEmbeddingScaled.pick(null, d), this.outputEmbedding.pick(null, d), maxVal);\n      }\n\n      return (0, _ndarrayUnpack2.default)(outputEmbeddingScaled);\n    }\n  }, {\n    key: '_gradDesc',\n    value: function _gradDesc(iter, nIter, momentum) {\n      var minGradNorm = arguments.length <= 3 || arguments[3] === undefined ? 1e-6 : arguments[3];\n      var minErrorDiff = arguments.length <= 4 || arguments[4] === undefined ? 1e-6 : arguments[4];\n      var nIterWithoutProg = 30; // initialize updates array\n\n      var update = (0, _ndarray2.default)(new Float64Array(this.outputEmbedding.size), this.outputEmbedding.shape); // initialize gains array\n\n      var tempArray = new Float64Array(this.outputEmbedding.size);\n\n      for (var _i = 0; _i < tempArray.length; _i++) {\n        tempArray[_i] = 1.0;\n      }\n\n      var gains = (0, _ndarray2.default)(tempArray, this.outputEmbedding.shape);\n      var error = Number.MAX_VALUE;\n      var bestError = Number.MAX_VALUE;\n      var bestIter = 0;\n      var norm = (0, _cwise2.default)({\n        args: ['array'],\n        pre: function pre(a) {\n          this.sum = 0.0;\n        },\n        body: function body(a) {\n          this.sum += a * a;\n        },\n        post: function post(a) {\n          return Math.sqrt(this.sum);\n        }\n      });\n      var gainsUpdate = (0, _cwise2.default)({\n        args: ['array', 'array', 'array'],\n        body: function body(c_gains, c_update, c_grad) {\n          if (c_update * c_grad >= 0) {\n            c_gains += 0.05;\n          } else {\n            c_gains *= 0.95;\n          } // set mininum gain 0.01\n\n\n          c_gains = Math.max(c_gains, 0.01);\n        }\n      });\n      var i = undefined;\n\n      for (i = iter; i < nIter; i++) {\n        var _divergenceKL = (0, _klDivergence2.default)(this.outputEmbedding, this.P, this.alpha);\n\n        var _divergenceKL2 = _slicedToArray(_divergenceKL, 2);\n\n        var cost = _divergenceKL2[0];\n        var grad = _divergenceKL2[1];\n        var errorDiff = Math.abs(cost - error);\n        error = cost;\n        var gradNorm = norm(grad);\n        this.emit('progressIter', [i, error, gradNorm]);\n\n        if (error < bestError) {\n          bestError = error;\n          bestIter = i;\n        } else if (i - bestIter > nIterWithoutProg) {\n          break;\n        }\n\n        if (minGradNorm >= gradNorm) break;\n        if (minErrorDiff >= errorDiff) break;\n        gainsUpdate(gains, update, grad);\n\n        _ndarrayOps2.default.muleq(grad, gains);\n\n        var temp = (0, _ndarray2.default)(new Float64Array(grad.size), grad.shape);\n\n        _ndarrayOps2.default.muls(temp, grad, this.learningRate);\n\n        _ndarrayOps2.default.mulseq(update, momentum);\n\n        _ndarrayOps2.default.subeq(update, temp);\n\n        _ndarrayOps2.default.addeq(this.outputEmbedding, update);\n\n        this.emit('progressData', this.getOutputScaled());\n      }\n\n      return [error, i];\n    }\n  }]);\n\n  return TSNE;\n}(_events.EventEmitter);\n\nexports.default = TSNE;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/Users/xuanmingcui/Documents/projects/ailab-webapp-frontend/analytics-webapp/node_modules/tsne-js/dist/index.js"],"names":["Object","defineProperty","exports","value","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_events","require","_ndarray","_ndarray2","_interopRequireDefault","_ndarrayOps","_ndarrayOps2","_ndarrayPack","_ndarrayPack2","_ndarrayUnpack","_ndarrayUnpack2","_cwise","_cwise2","_randn","_randn2","_pairwiseDistances","_pairwiseDistances2","_jointProbabilities","_jointProbabilities2","_klDivergence","_klDivergence2","obj","__esModule","default","_toConsumableArray","arr2","from","_classCallCheck","instance","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","TSNE","_EventEmitter","config","_this","getPrototypeOf","dim","perplexity","earlyExaggeration","learningRate","nIter","metric","barneshut","inputData","outputEmbedding","init","opts","data","type","shape","size","_loop","d","dimShape","Math","max","apply","map","coord","Float64Array","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_inputData","set","concat","return","Error","run","emit","distances","alpha","P","error","Number","MAX_VALUE","iter","mulseq","_gradDesc2","_gradDesc","_gradDesc3","_gradDesc4","_gradDesc5","divseq","_gradDesc6","_gradDesc7","rerun","_run","_run2","getOutput","getOutputScaled","outputEmbeddingScaled","temp","maxVal","sup","abs","pick","divs","momentum","minGradNorm","arguments","minErrorDiff","nIterWithoutProg","update","tempArray","gains","bestError","bestIter","norm","args","pre","a","sum","body","post","sqrt","gainsUpdate","c_gains","c_update","c_grad","_divergenceKL","_divergenceKL2","cost","grad","errorDiff","gradNorm","muleq","muls","subeq","addeq","EventEmitter","module"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = require('events');\n\nvar _ndarray = require('ndarray');\n\nvar _ndarray2 = _interopRequireDefault(_ndarray);\n\nvar _ndarrayOps = require('ndarray-ops');\n\nvar _ndarrayOps2 = _interopRequireDefault(_ndarrayOps);\n\nvar _ndarrayPack = require('ndarray-pack');\n\nvar _ndarrayPack2 = _interopRequireDefault(_ndarrayPack);\n\nvar _ndarrayUnpack = require('ndarray-unpack');\n\nvar _ndarrayUnpack2 = _interopRequireDefault(_ndarrayUnpack);\n\nvar _cwise = require('cwise');\n\nvar _cwise2 = _interopRequireDefault(_cwise);\n\nvar _randn = require('./randn');\n\nvar _randn2 = _interopRequireDefault(_randn);\n\nvar _pairwiseDistances = require('./pairwise-distances');\n\nvar _pairwiseDistances2 = _interopRequireDefault(_pairwiseDistances);\n\nvar _jointProbabilities = require('./joint-probabilities');\n\nvar _jointProbabilities2 = _interopRequireDefault(_jointProbabilities);\n\nvar _klDivergence = require('./kl-divergence');\n\nvar _klDivergence2 = _interopRequireDefault(_klDivergence);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TSNE = function (_EventEmitter) {\n  _inherits(TSNE, _EventEmitter);\n\n  function TSNE(config) {\n    _classCallCheck(this, TSNE);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(TSNE).call(this));\n\n    config = config || {};\n\n    _this.dim = config.dim || 2;\n    _this.perplexity = config.perplexity || 30.0;\n    _this.earlyExaggeration = config.earlyExaggeration || 4.0;\n    _this.learningRate = config.learningRate || 1000.0;\n    _this.nIter = config.nIter || 1000;\n    _this.metric = config.metric || 'euclidean';\n\n    _this.barneshut = config.barneshut || false;\n\n    _this.inputData = null;\n    _this.outputEmbedding = null;\n    return _this;\n  }\n\n  _createClass(TSNE, [{\n    key: 'init',\n    value: function init(opts) {\n      opts = opts || {};\n\n      var inputData = opts.data || [];\n      var type = opts.type || 'dense';\n\n      // format input data as ndarray\n      if (type === 'dense') {\n\n        this.inputData = (0, _ndarrayPack2.default)(inputData);\n      } else if (type === 'sparse') {\n\n        var shape = [];\n        var size = 1;\n\n        var _loop = function _loop(d) {\n          var dimShape = Math.max.apply(null, inputData.map(function (coord) {\n            return coord[d];\n          })) + 1;\n          shape.push(dimShape);\n          size *= dimShape;\n        };\n\n        for (var d = 0; d < inputData[0].length; d++) {\n          _loop(d);\n        }\n        this.inputData = (0, _ndarray2.default)(new Float64Array(size), shape);\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = inputData[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _inputData;\n\n            var coord = _step.value;\n\n            (_inputData = this.inputData).set.apply(_inputData, _toConsumableArray(coord).concat([1]));\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      } else {\n        throw new Error('input data type must be dense or sparse');\n      }\n\n      // random initialization of output embedding\n      this.outputEmbedding = (0, _randn2.default)(this.inputData.shape[0], this.dim);\n    }\n  }, {\n    key: 'run',\n    value: function run() {\n      // calculate pairwise distances\n      this.emit('progressStatus', 'Calculating pairwise distances');\n      this.distances = (0, _pairwiseDistances2.default)(this.inputData, this.metric);\n\n      this.emit('progressStatus', 'Calculating joint probabilities');\n      this.alpha = Math.max(this.dim - 1, 1);\n      this.P = (0, _jointProbabilities2.default)(this.distances, this.perplexity);\n\n      var error = Number.MAX_VALUE;\n      var iter = 0;\n\n      // early exaggeration\n      this.emit('progressStatus', 'Early exaggeration with momentum 0.5');\n      _ndarrayOps2.default.mulseq(this.P, this.earlyExaggeration);\n\n      var _gradDesc2 = this._gradDesc(iter, 50, 0.5, 0.0, 0.0);\n\n      var _gradDesc3 = _slicedToArray(_gradDesc2, 2);\n\n      error = _gradDesc3[0];\n      iter = _gradDesc3[1];\n\n      this.emit('progressStatus', 'Early exaggeration with momentum 0.8');\n\n\n      // final optimization\n\n      var _gradDesc4 = this._gradDesc(iter + 1, 100, 0.8, 0.0, 0.0);\n\n      var _gradDesc5 = _slicedToArray(_gradDesc4, 2);\n\n      error = _gradDesc5[0];\n      iter = _gradDesc5[1];\n      this.emit('progressStatus', 'Final optimization with momentum 0.8');\n      _ndarrayOps2.default.divseq(this.P, this.earlyExaggeration);\n\n      var _gradDesc6 = this._gradDesc(iter + 1, this.nIter, 0.8, 1e-6, 1e-6);\n\n      var _gradDesc7 = _slicedToArray(_gradDesc6, 2);\n\n      error = _gradDesc7[0];\n      iter = _gradDesc7[1];\n\n\n      this.emit('progressStatus', 'Optimization end');\n      return [error, iter];\n    }\n  }, {\n    key: 'rerun',\n    value: function rerun() {\n      // random re-initialization of output embedding\n      this.outputEmbedding = (0, _randn2.default)(this.inputData.shape[0], this.dim);\n\n      // re-run with gradient descent\n\n      var _run = this.run();\n\n      var _run2 = _slicedToArray(_run, 2);\n\n      var error = _run2[0];\n      var iter = _run2[1];\n\n\n      return [error, iter];\n    }\n  }, {\n    key: 'getOutput',\n    value: function getOutput() {\n      return (0, _ndarrayUnpack2.default)(this.outputEmbedding);\n    }\n  }, {\n    key: 'getOutputScaled',\n    value: function getOutputScaled() {\n      // scale output embedding to [-1, 1]\n      var outputEmbeddingScaled = (0, _ndarray2.default)(new Float64Array(this.outputEmbedding.size), this.outputEmbedding.shape);\n      var temp = (0, _ndarray2.default)(new Float64Array(this.outputEmbedding.shape[0]), [this.outputEmbedding.shape[0]]);\n\n      for (var d = 0; d < this.outputEmbedding.shape[1]; d++) {\n        var maxVal = _ndarrayOps2.default.sup(_ndarrayOps2.default.abs(temp, this.outputEmbedding.pick(null, d)));\n        _ndarrayOps2.default.divs(outputEmbeddingScaled.pick(null, d), this.outputEmbedding.pick(null, d), maxVal);\n      }\n\n      return (0, _ndarrayUnpack2.default)(outputEmbeddingScaled);\n    }\n  }, {\n    key: '_gradDesc',\n    value: function _gradDesc(iter, nIter, momentum) {\n      var minGradNorm = arguments.length <= 3 || arguments[3] === undefined ? 1e-6 : arguments[3];\n      var minErrorDiff = arguments.length <= 4 || arguments[4] === undefined ? 1e-6 : arguments[4];\n\n      var nIterWithoutProg = 30;\n\n      // initialize updates array\n      var update = (0, _ndarray2.default)(new Float64Array(this.outputEmbedding.size), this.outputEmbedding.shape);\n\n      // initialize gains array\n      var tempArray = new Float64Array(this.outputEmbedding.size);\n      for (var _i = 0; _i < tempArray.length; _i++) {\n        tempArray[_i] = 1.0;\n      }\n      var gains = (0, _ndarray2.default)(tempArray, this.outputEmbedding.shape);\n\n      var error = Number.MAX_VALUE;\n      var bestError = Number.MAX_VALUE;\n      var bestIter = 0;\n\n      var norm = (0, _cwise2.default)({\n        args: ['array'],\n        pre: function pre(a) {\n          this.sum = 0.0;\n        },\n        body: function body(a) {\n          this.sum += a * a;\n        },\n        post: function post(a) {\n          return Math.sqrt(this.sum);\n        }\n      });\n\n      var gainsUpdate = (0, _cwise2.default)({\n        args: ['array', 'array', 'array'],\n        body: function body(c_gains, c_update, c_grad) {\n          if (c_update * c_grad >= 0) {\n            c_gains += 0.05;\n          } else {\n            c_gains *= 0.95;\n          }\n          // set mininum gain 0.01\n          c_gains = Math.max(c_gains, 0.01);\n        }\n      });\n\n      var i = undefined;\n      for (i = iter; i < nIter; i++) {\n        var _divergenceKL = (0, _klDivergence2.default)(this.outputEmbedding, this.P, this.alpha);\n\n        var _divergenceKL2 = _slicedToArray(_divergenceKL, 2);\n\n        var cost = _divergenceKL2[0];\n        var grad = _divergenceKL2[1];\n\n        var errorDiff = Math.abs(cost - error);\n        error = cost;\n        var gradNorm = norm(grad);\n\n        this.emit('progressIter', [i, error, gradNorm]);\n\n        if (error < bestError) {\n          bestError = error;\n          bestIter = i;\n        } else if (i - bestIter > nIterWithoutProg) {\n          break;\n        }\n\n        if (minGradNorm >= gradNorm) break;\n        if (minErrorDiff >= errorDiff) break;\n\n        gainsUpdate(gains, update, grad);\n        _ndarrayOps2.default.muleq(grad, gains);\n\n        var temp = (0, _ndarray2.default)(new Float64Array(grad.size), grad.shape);\n        _ndarrayOps2.default.muls(temp, grad, this.learningRate);\n        _ndarrayOps2.default.mulseq(update, momentum);\n        _ndarrayOps2.default.subeq(update, temp);\n        _ndarrayOps2.default.addeq(this.outputEmbedding, update);\n\n        this.emit('progressData', this.getOutputScaled());\n      }\n\n      return [error, i];\n    }\n  }]);\n\n  return TSNE;\n}(_events.EventEmitter);\n\nexports.default = TSNE;\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}